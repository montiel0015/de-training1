{
   "paragraphs": [
      {
         "text": "%md\n# Matrix multiplication and cache\n\nWelcome to the notebook with the asasignment for the third session. You\u2019re well on your way to obtain the Wizeline Certification for Big Data Engineering with Spark!\n\nIf you have any feedback about our courses, email us at academy@wizeline.com or use the Academy Slack channel.",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<h1>Matrix multiplication and cache</h1>\n<p>Welcome to the notebook with the asasignment for the third session. You\u2019re well on your way to obtain the Wizeline Certification for Big Data Engineering with Spark!</p>\n<p>If you have any feedback about our courses, email us at <a href=\"mailto:&#97;&#99;a&#100;&#x65;&#x6d;y&#x40;&#119;&#105;&#122;&#x65;&#108;i&#x6e;&#101;&#46;&#x63;&#111;&#x6d;\">&#97;&#99;a&#100;&#x65;&#x6d;y&#x40;&#119;&#105;&#122;&#x65;&#108;i&#x6e;&#101;&#46;&#x63;&#111;&#x6d;</a> or use the Academy Slack channel.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038863_-2022760449",
         "id": "20180815-184319_767984790",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "focus": true,
         "$$hashKey": "object:703"
      },
      {
         "text": "%md\n## Big Matrix Multiplication Example\n\nIn this example, you will be able to compare Matrix Multiplication with and without caching on a larger dataset than the ones you have used.\nYou will be challenged to work with one big dataset, and as in the previous session you will transform it into a CoordinateMatrix object, convert it to a BlockMatrix, and calculate a polynomial with that matrix.\n\n",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<h2>Big Matrix Multiplication Example</h2>\n<p>In this example, you will be able to compare Matrix Multiplication with and without caching on a larger dataset than the ones you have used.<br/>You will be challenged to work with one big dataset, and as in the previous session you will transform it into a CoordinateMatrix object, convert it to a BlockMatrix, and calculate a polynomial with that matrix.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038863_-2022760449",
         "id": "20180816-044039_285868597",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:704"
      },
      {
         "text": "%md\n\nThe file is formatted with the following characteristics:\n    - Each line in the text file is a row in the matrix. \n    - They are comma-separated values. \n    - The first value is the row index starting at one, the remaining values are the Matrix values.",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:11:10+0000",
         "config": {
            "tableHide": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": false,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>The file is formatted with the following characteristics:<br/> - Each line in the text file is a row in the matrix.<br/> - They are comma-separated values.<br/> - The first value is the row index starting at one, the remaining values are the Matrix values.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038863_-2022760449",
         "id": "20180816-050807_2103207409",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:11+0000",
         "dateFinished": "2018-08-20T23:05:11+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:705"
      },
      {
         "text": "%md\n\nFirst, import the libraries to use during the session with the following command:",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:11:25+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>First, import the libraries to use during the session with the following command:</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038864_-2012372229",
         "id": "20180820-195656_1562598246",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:06:39+0000",
         "dateFinished": "2018-08-20T23:06:39+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:706"
      },
      {
         "text": "import org.apache.spark.sql.Dataset\nimport org.apache.spark.mllib.linalg.distributed.{BlockMatrix, CoordinateMatrix, MatrixEntry}",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": true,
            "editorSetting": {
               "language": "scala"
            },
            "colWidth": 12,
            "editorMode": "ace/mode/scala",
            "editorHide": false,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "TEXT",
                  "data": "import org.apache.spark.sql.Dataset\nimport org.apache.spark.mllib.linalg.distributed.{BlockMatrix, CoordinateMatrix, MatrixEntry}\n"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038864_-2012372229",
         "id": "20180816-051038_545285622",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:707"
      },
      {
         "text": "%md\nNext use `spark.read.textFile` to read the big matrix on the bucket URI: \n`gs://de-training-input/matrices/matrixbig1/*.csv.gz`.\n",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:06:41+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Next use <code>spark.read.textFile</code> to read the big matrix on the bucket URI:<br/><code>gs://de-training-input/matrices/matrixbig1/*.csv.gz</code>.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038864_-2012372229",
         "id": "20180816-051039_1898536718",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:06:41+0000",
         "dateFinished": "2018-08-20T23:06:41+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:708"
      },
      {
         "text": "val mattuples  = spark.read.csv(\"gs://de-training-input/matrices/matrixbig1a/*.csv.gz\")\nval matentries = mattuples.map(row => MatrixEntry(row(0).toString.toLong, row(1).toString.toLong, row(2).toString.toDouble))",
         "dateUpdated": "2018-08-20T23:25:13+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/scala",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "scala"
            }
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "TEXT",
                  "data": "mattuples: org.apache.spark.sql.DataFrame = [_c0: string, _c1: string ... 1 more field]\nmatentries: org.apache.spark.sql.Dataset[org.apache.spark.mllib.linalg.distributed.MatrixEntry] = [i: bigint, j: bigint ... 1 more field]\nblockm: org.apache.spark.mllib.linalg.distributed.BlockMatrix = org.apache.spark.mllib.linalg.distributed.BlockMatrix@3126650e\n"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038872_-2015450220",
         "id": "20180816-070420_1766932377",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:709"
      },
      {
         "text": "%md\nNow that we have converted all of our lines into `MatrixEntry` objects we need to put them all inside a `BlockMatrix`. Define a function called `create_blockMatrix` that receives one of the previous objects and uses a `CoordinateMatrix` to output a `BlockMatrix`.\n",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Now that we have converted all of our lines into <code>MatrixEntry</code> objects we need to put them all inside a <code>BlockMatrix</code>. Define a function called <code>create_blockMatrix</code> that receives one of the previous objects and uses a <code>CoordinateMatrix</code> to output a <code>BlockMatrix</code>.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038873_-2015834969",
         "id": "20180816-052746_2109723812",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:710"
      },
      {
         "text": "def create_blockMatrix(MatrixEntries: Dataset[MatrixEntry]) = {\n    new CoordinateMatrix(MatrixEntries.rdd).toBlockMatrix()\n}\n",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/scala",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "scala"
            }
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "TEXT",
                  "data": "create_blockMatrix: (MatrixEntries: org.apache.spark.sql.Dataset[org.apache.spark.mllib.linalg.distributed.MatrixEntry])org.apache.spark.mllib.linalg.distributed.BlockMatrix\n"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038873_-2015834969",
         "id": "20180816-051640_149771352",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:711"
      },
      {
         "text": "%md\nNow, we convert the `Dataset` into a `BlockMatrix`:",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Now, we convert the <code>Dataset</code> into a <code>BlockMatrix</code>:</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038873_-2015834969",
         "id": "20180816-051434_624669525",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:712"
      },
      {
         "text": "val blockBigMatrix = create_blockMatrix(matentries)",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/scala",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "scala",
               "editOnDblClick": false
            }
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "TEXT",
                  "data": "blockBigMatrix: org.apache.spark.mllib.linalg.distributed.BlockMatrix = org.apache.spark.mllib.linalg.distributed.BlockMatrix@783e9335\n"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038873_-2015834969",
         "id": "20180816-053544_199438445",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:713"
      },
      {
         "text": "%md\nNow imagine that you have these polynomials where `x` is our Big Matrix and we need to save the result of each operation on a file\n\n```\n3x^3 + x^2\n```\nand\n\n```\nx^3 + 2x^2 + x\n```\n",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:04:49+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Now imagine that you have these polynomials where <code>x</code> is our Big Matrix and we need to save the result of each operation on a file</p>\n<pre><code>3x^3 + x^2\n</code></pre>\n<p>and</p>\n<pre><code>x^3 + 2x^2 + x\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038874_-2014680722",
         "id": "20180820-012707_1436435390",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:04:49+0000",
         "dateFinished": "2018-08-20T23:04:49+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:714"
      },
      {
         "text": "%md\n\nIf we just run the operation like it is and save it, it would take a consider time to complete",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>If we just run the operation like it is and save it, it would take a consider time to complete</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038874_-2014680722",
         "id": "20180816-054044_1121238451",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:715"
      },
      {
         "text": "%md\n**NOTE:** we are converting the `BlockMatrix` back to `CoordinateMatrix` for writing purposes.",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:04:52+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p><strong>NOTE:</strong> we are converting the <code>BlockMatrix</code> back to <code>CoordinateMatrix</code> for writing purposes.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038874_-2014680722",
         "id": "20180816-055549_596649276",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:04:52+0000",
         "dateFinished": "2018-08-20T23:04:52+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:716"
      },
      {
         "text": "%md\nOnce the computation is over, save the results to your output bucket. To do so, you will need to transform the `matrix` object into a `CoordinateMatrix`. Then point to its `entries` attribute, using the `saveAsTextFile` method. \n",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Once the computation is over, save the results to your output bucket. To do so, you will need to transform the <code>matrix</code> object into a <code>CoordinateMatrix</code>. Then point to its <code>entries</code> attribute, using the <code>saveAsTextFile</code> method.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038874_-2014680722",
         "id": "20180816-051040_524958004",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:717"
      },
      {
         "text": "%md\nLet's explain a little bit the code before just run it.",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:05:06+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": true,
            "tableHide": false
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Let&rsquo;s explain a little bit the code before just run it.</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038874_-2014680722",
         "id": "20180820-200656_760903065",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:06+0000",
         "dateFinished": "2018-08-20T23:05:06+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:718"
      },
      {
         "text": "%md\nWe define our `x`\n\n```\nval x = blockBigMatrix\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:14:42+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>We define our <code>x</code></p>\n<pre><code>val x = blockBigMatrix\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038874_-2014680722",
         "id": "20180820-200731_991980151",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:04+0000",
         "dateFinished": "2018-08-20T23:05:04+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:719"
      },
      {
         "text": "%md\nCalculate x^2 and x^3\n\n```\nval x3 = x.multiply(x).multiply(x)\nval x2 = x.multiply(x)\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:15:08+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Calculate x^2 and x^3</p>\n<pre><code>val x3 = x.multiply(x).multiply(x)\nval x2 = x.multiply(x)\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038875_-2015065471",
         "id": "20180820-200848_1036149003",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:06:50+0000",
         "dateFinished": "2018-08-20T23:06:50+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:720"
      },
      {
         "text": "%md\nSave the x^2 and x^3\n\n```\nx2.toCoordinateMatrix().entries.saveAsTextFile(\"gs://de-training-output-<user-name>/bigMatrixExample-polynomialx2.txt\")\nx3.toCoordinateMatrix().entries.saveAsTextFile(\"gs://de-training-output-<user-name>/bigMatrixExample-polynomialx3.txt\")\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:15:30+0000",
         "config": {
            "tableHide": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorHide": false
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Save the x^2 and x^3</p>\n<pre><code>x2.toCoordinateMatrix().entries.saveAsTextFile(&quot;gs://de-training-output-&lt;user-name&gt;/bigMatrixExample-polynomialx2.txt&quot;)\nx3.toCoordinateMatrix().entries.saveAsTextFile(&quot;gs://de-training-output-&lt;user-name&gt;/bigMatrixExample-polynomialx3.txt&quot;)\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038875_-2015065471",
         "id": "20180820-200926_2048452326",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:01+0000",
         "dateFinished": "2018-08-20T23:05:01+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:721"
      },
      {
         "text": "%md\nCompute the result and save it\n\n```\nval result1 = x3.add(x3).add(x3).add(x2)\n\nresult1.toCoordinateMatrix().entries.saveAsTextFile(\"gs://de-training-output-<user-name>/bigMatrixExample-polynomial1.txt\")\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:15:46+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Compute the result and save it</p>\n<pre><code>val result1 = x3.add(x3).add(x3).add(x2)\n\nresult1.toCoordinateMatrix().entries.saveAsTextFile(&quot;gs://de-training-output-&lt;user-name&gt;/bigMatrixExample-polynomial1.txt&quot;)\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038875_-2015065471",
         "id": "20180820-201016_24118965",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:04:59+0000",
         "dateFinished": "2018-08-20T23:04:59+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:722"
      },
      {
         "text": "%md\nRepeat the proccess but now for our second polynomial\n\n```\nval result2a = x2.multiply(x).add(x2).add(x2).add(x)\n\nresult2a.toCoordinateMatrix().entries.saveAsTextFile(\"gs://de-training-output-<user-name>/bigMatrixExample-polynomial2a.txt\")\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:16:11+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Repeat the proccess but now for our second polynomial</p>\n<pre><code>val result2a = x2.multiply(x).add(x2).add(x2).add(x)\n\nresult2a.toCoordinateMatrix().entries.saveAsTextFile(&quot;gs://de-training-output-&lt;user-name&gt;/bigMatrixExample-polynomial2a.txt&quot;)\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038875_-2015065471",
         "id": "20180820-201142_274810150",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:18+0000",
         "dateFinished": "2018-08-20T23:05:18+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:723"
      },
      {
         "text": "%md\nHere, an other workaround to calculate the second polynomial\n\nWe calculate ` x^2 + x`\n```\nval x3 = x.multiply(x).add(x)\n```\n\nThen `x^3 + x^2 + x^2 + x => x^3 + 2x^2 + x`\n```\nval result2b = x3.multiply(x).add(x3)\n```\n\nAnd at least, we save the result\n```\nresult2b.toCoordinateMatrix().entries.saveAsTextFile(\"gs://de-training-output-<user-name>/bigMatrixExample-polynomial2b.txt\")\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:16:46+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Here, an other workaround to calculate the second polynomial</p>\n<p>We calculate <code>x^2 + x</code></p>\n<pre><code>val x3 = x.multiply(x).add(x)\n</code></pre>\n<p>Then <code>x^3 + x^2 + x^2 + x =&gt; x^3 + 2x^2 + x</code></p>\n<pre><code>val result2b = x3.multiply(x).add(x3)\n</code></pre>\n<p>And at least, we save the result</p>\n<pre><code>result2b.toCoordinateMatrix().entries.saveAsTextFile(&quot;gs://de-training-output-&lt;user-name&gt;/bigMatrixExample-polynomial2b.txt&quot;)\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038875_-2015065471",
         "id": "20180820-201238_1078406723",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:20+0000",
         "dateFinished": "2018-08-20T23:05:20+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:724"
      },
      {
         "text": "%md\nWe are going to define a variable to be used instead of your username, **please modify it!**",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:17:19+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>We are going to define a variable to be used instead of your username, <strong>please modify it!</strong></p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038875_-2015065471",
         "id": "20180820-202046_973107264",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:23+0000",
         "dateFinished": "2018-08-20T23:05:23+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:725"
      },
      {
         "text": "val theUsername = \"<user-name>\"",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/scala",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "scala"
            }
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "TEXT",
                  "data": "theUsername: String = <user-name>\n"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038876_-2016989215",
         "id": "20180820-202117_652341443",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:726"
      },
      {
         "text": "val x = blockBigMatrix\nval x2 = x.multiply(x)\nval x3 = x2.multiply(x)\nx2.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomialx2.txt\")\nx3.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomialx3.txt\")\nval result1 = x3.add(x3).add(x3).add(x2)\nresult1.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomial1.txt\")\nval result2a = x2.multiply(x).add(x2).add(x2).add(x)\nresult2a.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomial2a.txt\")\nval x3bis = x.multiply(x).add(x)\nval result2b = x3bis.multiply(x).add(x3bis)\nresult2b.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomial2b.txt\")",
         "dateUpdated": "2018-08-20T23:30:43+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/scala",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "scala"
            }
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "ERROR",
            "msg": [
               {
                  "type": "TEXT",
                  "data": "x: org.apache.spark.mllib.linalg.distributed.BlockMatrix = org.apache.spark.mllib.linalg.distributed.BlockMatrix@783e9335\norg.apache.spark.SparkException: Job 41 cancelled part of cancelled job group zeppelin-20180820-013921_2100202987\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1517)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobCancellation(DAGScheduler.scala:1457)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply$mcVI$sp(DAGScheduler.scala:799)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:799)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:799)\n  at scala.collection.mutable.HashSet.foreach(HashSet.scala:78)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobGroupCancelled(DAGScheduler.scala:799)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1707)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1687)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1676)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:630)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2029)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2050)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2069)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2094)\n  at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:936)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:362)\n  at org.apache.spark.rdd.RDD.collect(RDD.scala:935)\n  at org.apache.spark.mllib.linalg.distributed.BlockMatrix.simulateMultiply(BlockMatrix.scala:430)\n  at org.apache.spark.mllib.linalg.distributed.BlockMatrix.multiply(BlockMatrix.scala:499)\n  at org.apache.spark.mllib.linalg.distributed.BlockMatrix.multiply(BlockMatrix.scala:467)\n  ... 46 elided\n"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038876_-2016989215",
         "id": "20180820-013921_2100202987",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:727"
      },
      {
         "text": "%md\n\nDo you see how much time is needed to complete the operation?\n\nLet's apply some cache!",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Do you see how much time is needed to complete the operation?</p>\n<p>Let&rsquo;s apply some cache!</p>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038876_-2016989215",
         "id": "20180820-023941_1083911430",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:728"
      },
      {
         "text": "%md\nAlso, cache applied to `x2`, so it will not be computed again.\n\n```\nval x2 = x.multiply(x).cache()\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:22:27+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Also, cache applied to <code>x2</code>, so it will not be computed again.</p>\n<pre><code>val x2 = x.multiply(x).cache()\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038876_-2016989215",
         "id": "20180820-201748_1090802896",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:29+0000",
         "dateFinished": "2018-08-20T23:05:29+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:729"
      },
      {
         "text": "%md\nAnd at least the cache is applied to `x3`\n\n```\nval x3bis = x.multiply(x).add(x)\n```",
         "user": "anonymous",
         "dateUpdated": "2018-08-20T23:30:50+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "editorHide": false,
            "tableHide": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>And at least the cache is applied to <code>x3</code></p>\n<pre><code>val x3 = x2.add(x).cache()\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038876_-2016989215",
         "id": "20180820-201858_1724845356",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "dateStarted": "2018-08-20T23:05:31+0000",
         "dateFinished": "2018-08-20T23:05:31+0000",
         "status": "FINISHED",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:730"
      },
      {
         "text": "val x = blockBigMatrix\nval x2 = x.multiply(x).cache() \nval x3 = x2.multiply(x).cache()\nx2.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomialx2Cache.txt\")\nx3.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomialx3Cache.txt\")\nval result1 = x3.add(x3).add(x3).add(x2)\nresult1.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomial1Cache.txt\")\nval result2a = x2.multiply(x).add(x2).add(x2).add(x)\nresult2a.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomial2aCache.txt\")\nval x3bis = x.multiply(x).add(x).cache()\nval result2b = x3bis.multiply(x).add(x3bis)\nresult2b.toCoordinateMatrix().entries.saveAsTextFile(s\"gs://de-training-output-$theUsername/bigMatrixExample-polynomial2bCache.txt\")",
         "dateUpdated": "2018-08-20T23:30:59+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/scala",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "scala"
            }
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "ERROR",
            "msg": [
               {
                  "type": "TEXT",
                  "data": "x: org.apache.spark.mllib.linalg.distributed.BlockMatrix = org.apache.spark.mllib.linalg.distributed.BlockMatrix@783e9335\nres21: x.type = org.apache.spark.mllib.linalg.distributed.BlockMatrix@783e9335\norg.apache.spark.SparkException: Job 44 cancelled part of cancelled job group zeppelin-20180820-025912_1246977407\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1517)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobCancellation(DAGScheduler.scala:1457)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply$mcVI$sp(DAGScheduler.scala:799)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:799)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:799)\n  at scala.collection.mutable.HashSet.foreach(HashSet.scala:78)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobGroupCancelled(DAGScheduler.scala:799)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1707)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1687)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1676)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:630)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2029)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2050)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2069)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2094)\n  at org.apache.spark.rdd.RDD$$anonfun$collect$1.apply(RDD.scala:936)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:362)\n  at org.apache.spark.rdd.RDD.collect(RDD.scala:935)\n  at org.apache.spark.mllib.linalg.distributed.BlockMatrix.simulateMultiply(BlockMatrix.scala:430)\n  at org.apache.spark.mllib.linalg.distributed.BlockMatrix.multiply(BlockMatrix.scala:499)\n  at org.apache.spark.mllib.linalg.distributed.BlockMatrix.multiply(BlockMatrix.scala:467)\n  ... 46 elided\n"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038876_-2016989215",
         "id": "20180820-025912_1246977407",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:731"
      },
      {
         "title": "Exercise time!",
         "text": "%md\n\nCalculate this polynomial: and write the result in: `\"gs://de-training-output-<user-name>/bigMatrixExample-exerciseResult.txt\"`\n\n```\nx^11 + x^9 + x^7 + x^5 + x^4 + x^3 + x^2 + x\n```",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "tableHide": false,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            },
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "editorHide": true,
            "title": true,
            "results": {},
            "enabled": true
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "results": {
            "code": "SUCCESS",
            "msg": [
               {
                  "type": "HTML",
                  "data": "<div class=\"markdown-body\">\n<p>Calculate this polynomial: and write the result in: <code>&quot;gs://de-training-output-&lt;user-name&gt;/bigMatrixExample-exerciseResult.txt&quot;</code></p>\n<pre><code>x^11 + x^9 + x^7 + x^5 + x^4 + x^3 + x^2 + x\n</code></pre>\n</div>"
               }
            ]
         },
         "apps": [],
         "jobName": "paragraph_1534806038877_-2017373964",
         "id": "20180816-061612_1285669371",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:732"
      },
      {
         "text": "%md\n",
         "dateUpdated": "2018-08-20T23:00:38+0000",
         "config": {
            "colWidth": 12,
            "editorMode": "ace/mode/markdown",
            "results": {},
            "enabled": true,
            "editorSetting": {
               "language": "markdown",
               "editOnDblClick": true
            }
         },
         "settings": {
            "params": {},
            "forms": {}
         },
         "apps": [],
         "jobName": "paragraph_1534806038877_-2017373964",
         "id": "20180816-204005_1297364994",
         "dateCreated": "2018-08-20T23:00:38+0000",
         "status": "READY",
         "errorMessage": "",
         "progressUpdateIntervalMs": 500,
         "$$hashKey": "object:733"
      }
   ],
   "name": "Matrix-Multiplication With Cache in Scala",
   "id": "2DP2M9QFC",
   "angularObjects": {
      "2DNRZQXJB:shared_process": [],
      "2DN3RRF4F:shared_process": [],
      "2DRBJHYJ2:shared_process": [],
      "2DQ88XWSE:shared_process": [],
      "2DQ27TTYQ:shared_process": [],
      "2DP45QAQ8:shared_process": [],
      "2DMM3546T:shared_process": [],
      "2DPKVYVTH:shared_process": [],
      "2DN8SH6T8:shared_process": [],
      "2DP7DT266:shared_process": [],
      "2DP6U5WSE:shared_process": [],
      "2DN4VWF96:shared_process": [],
      "2DNFEFDSE:shared_process": [],
      "2DNYX7V6X:shared_process": [],
      "2DQS317EX:shared_process": [],
      "2DQH3WH7M:shared_process": [],
      "2DNTPNGFJ:shared_process": [],
      "2DPK5Q3GF:shared_process": []
   },
   "config": {
      "looknfeel": "default",
      "personalizedMode": "false"
   },
   "info": {}
}
